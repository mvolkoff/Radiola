<Page
    x:Class="Radiola.UI.Views.Layout.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Radiola.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Radiola.UI.ViewModels.Layout"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    DataContext="{Binding Shell, Source={StaticResource Locator}}">

    <Page.Resources>
        <x:String x:Key="HamburgerIcon">M0,24L32,24 32,26 0,26z M0,12L32,12 32,14 0,14z M0,0L32,0 32,2 0,2z</x:String>

        <DataTemplate x:Key="MenuItemTemplate" x:DataType="vm:MenuItem">
            <Grid>
                <Button Style="{StaticResource SplitViewMenuButtonStyle}"
                        Command="{Binding NavigateCommand}">
                    <StackPanel Orientation="Horizontal"
                                Margin="0">
                        <Border Background="Transparent"
                                ToolTipService.ToolTip="{x:Bind Text}" Margin="12">
                            <Path x:Name="Glyph"
                                  Data="{x:Bind Glyph}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Height="24"
                                  Width="24"
                                  Fill="{StaticResource SplitViewForegroundBrush}"
                                  Stretch="Uniform" />
                        </Border>
                        <TextBlock Text="{x:Bind Text}"
                                   Margin="8 0 0 0"
                                   Foreground="{StaticResource SplitViewForegroundBrush}"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <!-- SplitView -->
        <SplitView x:Name="RootSplitView"
                   IsPaneOpen="False"
                   CompactPaneLength="48"
                   OpenPaneLength="200"
                   PaneBackground="{StaticResource SplitViewBackgroundBrush}"
                   DisplayMode="Overlay">
            <SplitView.Pane>
                <Grid x:Name="SplitViewPane"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      ManipulationMode="TranslateX"
                      ManipulationCompleted="SplitViewPane_ManipulationCompleted"
                      Background="{StaticResource SplitViewBackgroundBrush}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ItemsControl x:Name="Menu"
                              ItemsSource="{Binding PrimaryMenu}"
                              Margin="0 48 0 0"
                              VerticalAlignment="Top"
                              ItemTemplate="{StaticResource MenuItemTemplate}" />
                    <ItemsControl x:Name="SecondMenu"
                              ItemsSource="{Binding SecondaryMenu}"
                              ItemTemplate="{StaticResource MenuItemTemplate}"
                              Margin="0 48 0 0"
                              VerticalAlignment="Top"
                              Grid.Row="2" />
                </Grid>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid Background="{StaticResource PageBackgroundBrush}">
                    <!-- Navigation Frame -->
                    <Frame x:Name="SplitViewFrame" Padding="0 0 0 0">

                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <NavigationThemeTransition>
                                    <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                        <DrillInNavigationTransitionInfo />
                                    </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                </NavigationThemeTransition>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>

                    <!-- SplitViewOpener -->
                    <!-- Comment out when it blocks the UI -->
                    <Grid ManipulationMode="TranslateX"
                          ManipulationCompleted="SplitViewOpener_ManipulationCompleted"
                          Width="120"
                          Margin="0"
                          Background="Transparent"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Stretch">
                    </Grid>
                </Grid>
            </SplitView.Content>
        </SplitView>

        <!-- Hamburger Button -->
        <Button x:Name="HamburgerButton"
                Width="48"
                Height="48"
                Background="Transparent"
                Foreground="{StaticResource HamburgerForegroundBrush}"
                VerticalAlignment="Top"
                BorderThickness="0"
                Click="HamburgerButton_Click">
            <Path Data="{StaticResource HamburgerIcon}"
                  Fill="{StaticResource HamburgerForegroundBrush}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Height="24"
                  Width="24"
                  Stretch="Uniform" />
        </Button>

        <!-- Responsive Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!-- VisualState to be triggered when window width is >=1007 effective pixels -->
                <VisualState x:Name="Large">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1007" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SplitView pane shows as overlay -->
                        <!-- Splitview pane will close however :-( -->
                        <Setter Target="RootSplitView.DisplayMode"
                                Value="Inline" />
                        <Setter Target="RootSplitView.IsPaneOpen"
                                Value="True" />
                    </VisualState.Setters>
                </VisualState>

                <!-- VisualState to be triggered when window width is >=640 and <=1007 effective pixels -->
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode"
                                Value="CompactOverlay" />
                        <Setter Target="RootSplitView.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>

                <!-- VisualState to be triggered when window width is >=0 and <641 effective pixels -->
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Collapse the SplitView pane into overlay mode -->
                        <Setter Target="RootSplitView.DisplayMode"
                                Value="Overlay" />
                        <Setter Target="RootSplitView.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
